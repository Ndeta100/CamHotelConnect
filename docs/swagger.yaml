definitions:
  api.BookRoomParams:
    properties:
      fromDate:
        type: string
      numPersons:
        type: integer
      tillDate:
        type: string
    type: object
  api.GenericResp:
    properties:
      msg:
        type: string
      type:
        type: string
    type: object
  api.ResourceResp:
    properties:
      data: {}
      page:
        type: integer
      results:
        type: integer
    type: object
  types.Booking:
    properties:
      canceled:
        type: boolean
      fromDate:
        type: string
      id:
        type: string
      numPerson:
        type: integer
      roomID:
        type: string
      tillDate:
        type: string
      userID:
        type: string
    type: object
  types.CreateUserParams:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  types.Hotel:
    properties:
      amenities:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      images:
        items:
          type: string
        type: array
      location:
        type: string
      name:
        type: string
      rating:
        type: integer
      rooms:
        items:
          type: string
        type: array
    type: object
  types.Room:
    properties:
      hotelID:
        type: string
      id:
        type: string
      images:
        items:
          type: string
        type: array
      price:
        type: number
      seaside:
        type: boolean
      size:
        description: small, normal or kingSize
        type: string
    type: object
  types.UpdateUserParams:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
  types.User:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      role:
        $ref: '#/definitions/types.UserRole'
    type: object
  types.UserRole:
    enum:
    - USER
    - ADMIN
    - SUPER_ADMIN
    type: string
    x-enum-varnames:
    - UserRoleUser
    - UserRoleAdmin
    - UserRoleSuperAdmin
info:
  contact:
    email: api.support.huz@mail.com
    name: API Support
  description: This project is a backend JSON API for a hotel reservation system.
  license:
    name: Apache 2.0
  title: CAM HOTEL CONNECT
  version: 0.0.1 beta
paths:
  /bookings:
    get:
      consumes:
      - application/json
      description: Get a list of all bookings.
      produces:
      - application/json
      responses:
        "200":
          description: List of bookings retrieved successfully
          schema:
            items:
              $ref: '#/definitions/types.Booking'
            type: array
        "404":
          description: Bookings not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get all bookings
      tags:
      - bookings
  /bookings/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a booking by its ID. Only the user who made the
        booking and hotel owner can retrieve it.
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Booking details retrieved successfully
          schema:
            $ref: '#/definitions/types.Booking'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.GenericResp'
        "404":
          description: Booking not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get a booking
      tags:
      - bookings
  /bookings/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancel a booking by its ID. Only the user who made the booking
        can cancel it.
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Booking canceled successfully
          schema:
            $ref: '#/definitions/api.GenericResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.GenericResp'
        "404":
          description: Booking not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Cancel a booking
      tags:
      - bookings
  /hotels:
    get:
      consumes:
      - application/json
      description: Get a list of all hotels with optional filtering and pagination.
      parameters:
      - description: Filter hotels by rating
        in: query
        name: rating
        type: integer
      - default: 1
        description: Page number for pagination
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of hotels per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of hotels retrieved successfully
          schema:
            $ref: '#/definitions/api.ResourceResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.GenericResp'
        "404":
          description: Hotels not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get all hotels
      tags:
      - hotels
    post:
      consumes:
      - multipart/form-data
      description: Add a new hotel. Only users with the "ADMIN" role can create hotels.
      parameters:
      - description: Hotel data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.Hotel'
      - description: Hotel images
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Hotel created successfully
          schema:
            $ref: '#/definitions/types.Hotel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.GenericResp'
        "401":
          description: Unauthorized - Missing or invalid credentials
          schema:
            $ref: '#/definitions/api.GenericResp'
        "403":
          description: Forbidden - User does not have the required role
          schema:
            $ref: '#/definitions/api.GenericResp'
        "409":
          description: Conflict - Hotel already exists
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Add a new hotel
      tags:
      - hotels
  /hotels/{id}:
    get:
      description: Get details of a specific hotel by its ID.
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Hotel details retrieved successfully
          schema:
            $ref: '#/definitions/types.Hotel'
        "400":
          description: Invalid Hotel ID
          schema:
            $ref: '#/definitions/api.GenericResp'
        "404":
          description: Hotel not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get a specific hotel
      tags:
      - hotels
  /hotels/{id}/rooms:
    get:
      description: Get a list of all rooms for a specific hotel.
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of rooms retrieved successfully
          schema:
            items:
              $ref: '#/definitions/types.Room'
            type: array
        "400":
          description: Invalid Hotel ID
          schema:
            $ref: '#/definitions/api.GenericResp'
        "404":
          description: Hotel not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get all rooms in a hotel
      tags:
      - hotels
  /rooms:
    get:
      description: Get a list of all rooms available.
      produces:
      - application/json
      responses:
        "200":
          description: List of rooms retrieved successfully
          schema:
            items:
              $ref: '#/definitions/types.Room'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get all rooms
      tags:
      - rooms
  /rooms/{id}/book:
    post:
      consumes:
      - application/json
      description: Book a room with the specified parameters. The room must be available.
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: string
      - description: Booking parameters
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/api.BookRoomParams'
      produces:
      - application/json
      responses:
        "200":
          description: Room booked successfully
          schema:
            $ref: '#/definitions/types.Booking'
        "400":
          description: Bad Request - Room already booked or invalid parameters
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Book a room
      tags:
      - rooms
  /users:
    get:
      description: Get a list of all users.
      produces:
      - application/json
      responses:
        "200":
          description: List of users retrieved successfully
          schema:
            items:
              $ref: '#/definitions/types.User'
            type: array
        "404":
          description: Users not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            $ref: '#/definitions/types.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.GenericResp'
        "409":
          description: User already exists
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by their ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a user by their ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details retrieved successfully
          schema:
            $ref: '#/definitions/types.User'
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details by user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid User ID
          schema:
            $ref: '#/definitions/api.GenericResp'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/api.GenericResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.GenericResp'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
