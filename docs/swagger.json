{
    "swagger": "2.0",
    "info": {
        "description": "This project is a backend JSON API for a hotel reservation system.",
        "title": "CAM HOTEL CONNECT",
        "contact": {
            "name": "API Support",
            "email": "api.support.huz@mail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "0.0.1 beta"
    },
    "paths": {
        "/bookings": {
            "get": {
                "description": "Get a list of all bookings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get all bookings",
                "responses": {
                    "200": {
                        "description": "List of bookings retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Booking"
                            }
                        }
                    },
                    "404": {
                        "description": "Bookings not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "description": "Get details of a booking by its ID. Only the user who made the booking and hotel owner can retrieve it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get a booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/types.Booking"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/bookings/{id}/cancel": {
            "put": {
                "description": "Cancel a booking by its ID. Only the user who made the booking can cancel it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Cancel a booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking canceled successfully",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/hotels": {
            "get": {
                "description": "Get a list of all hotels with optional filtering and pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Get all hotels",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter hotels by rating",
                        "name": "rating",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of hotels per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of hotels retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ResourceResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "404": {
                        "description": "Hotels not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new hotel. Only users with the \"ADMIN\" role can create hotels.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Add a new hotel",
                "parameters": [
                    {
                        "description": "Hotel data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Hotel"
                        }
                    },
                    {
                        "type": "file",
                        "description": "Hotel images",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Hotel created successfully",
                        "schema": {
                            "$ref": "#/definitions/types.Hotel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have the required role",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "409": {
                        "description": "Conflict - Hotel already exists",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/hotels/{id}": {
            "get": {
                "description": "Get details of a specific hotel by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Get a specific hotel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotel details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/types.Hotel"
                        }
                    },
                    "400": {
                        "description": "Invalid Hotel ID",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "404": {
                        "description": "Hotel not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/hotels/{id}/rooms": {
            "get": {
                "description": "Get a list of all rooms for a specific hotel.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Get all rooms in a hotel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of rooms retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Room"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Hotel ID",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "404": {
                        "description": "Hotel not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "Get a list of all rooms available.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Get all rooms",
                "responses": {
                    "200": {
                        "description": "List of rooms retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Room"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/rooms/{id}/book": {
            "post": {
                "description": "Book a room with the specified parameters. The room must be available.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Book a room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking parameters",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BookRoomParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room booked successfully",
                        "schema": {
                            "$ref": "#/definitions/types.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Room already booked or invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of all users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/types.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a user by their ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/types.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user details by user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid User ID",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.GenericResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.BookRoomParams": {
            "type": "object",
            "properties": {
                "fromDate": {
                    "type": "string"
                },
                "numPersons": {
                    "type": "integer"
                },
                "tillDate": {
                    "type": "string"
                }
            }
        },
        "api.GenericResp": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ResourceResp": {
            "type": "object",
            "properties": {
                "data": {},
                "page": {
                    "type": "integer"
                },
                "results": {
                    "type": "integer"
                }
            }
        },
        "types.Booking": {
            "type": "object",
            "properties": {
                "canceled": {
                    "type": "boolean"
                },
                "fromDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "numPerson": {
                    "type": "integer"
                },
                "roomID": {
                    "type": "string"
                },
                "tillDate": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "types.CreateUserParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.Hotel": {
            "type": "object",
            "properties": {
                "amenities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.Room": {
            "type": "object",
            "properties": {
                "hotelID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "seaside": {
                    "type": "boolean"
                },
                "size": {
                    "description": "small, normal or kingSize",
                    "type": "string"
                }
            }
        },
        "types.UpdateUserParams": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "types.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/types.UserRole"
                }
            }
        },
        "types.UserRole": {
            "type": "string",
            "enum": [
                "USER",
                "ADMIN",
                "SUPER_ADMIN"
            ],
            "x-enum-varnames": [
                "UserRoleUser",
                "UserRoleAdmin",
                "UserRoleSuperAdmin"
            ]
        }
    }
}